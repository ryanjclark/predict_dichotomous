library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(formattable)
# Make fictional matrix to compute odds
a <- data.frame(TWD=c("Yes", "No"), Male=c(30, 10), Female=c(34, 6))
a

tot_male <- sum(a["Male"])
tot_female <- sum(a['Female'])
tot_texters <- a[1,]$Male + a[1,]$Female
tot_nontexters <- a[2,]$Male + a[2,]$Female

prob_male_texter <- a[1, 2] / tot_male
prob_female_texter <- a[1, 3] / tot_female
odds_male_texter <- prob_male_texter / (1-prob_male_texter)
odds_female_texter <- prob_female_texter / (1-prob_female_texter)

# Religious dataset
dat <- read.csv("religion.csv")
# EDA
nrow(dat)
names(dat)
glimpse(dat)
# Which columns have NA?
sum(is.na(dat))
names(which(sapply(dat, anyNA)))
# Remove NA from dataframe
dat <- dat %>%
  filter(!is.na(INCOME),!is.na(AGE),!is.na(EDUC),!is.na(AGESQ))
# Histograms
hist(dat$AGE)
hist(dat$EDUC)
hist(dat$INCOME)
hist(dat$ATTEND)
# Proportion of attending religious school and odds
relschol_tbl <- prop.table(table(dat$RELSCHOL))
relschol_tbl[2] / (1 - relschol_tbl[2])
# Compare RELSCHOL and RACE
rel.race.tbl <- table(dat$RELSCHOL, dat$RACE, dnn = c("RELSCHOL", "RACE"))
white_rel <- rel.race.tbl[2, 2] / sum(rel.race.tbl[, 2])
non_white_rel <- rel.race.tbl[2, 1] / sum(rel.race.tbl[, 1])
white_relig <- round(white_rel / (1 - white_rel), digits = 3)
non_white_relig <- round(non_white_rel / (1 - non_white_rel), digits = 3)
wr_or_nwr <- round(white_relig / non_white_relig, digits = 3)
# RELSCHOL by INCOME
# Is there interaction?
ggplot(dat, aes(x=INCOME, y=RELSCHOL)) +
  geom_point()
# View histograms with religious attendance or not
par(mfrow=c(1,2))
hist(dat$INCOME[which(dat$RELSCHOL == 0)])
hist(dat$INCOME[which(dat$RELSCHOL == 1)])
# Set cutoff value at 3
dat$D_INCOME <- ifelse(dat$INCOME <= 3, 1, 0)
relschol.income.tbl <- table(dat$RELSCHOL, dat$D_INCOME, 
                             dnn = c("RELSCHOL", "D_INCOME"))
# RELSCHOL by ATTEND
ggplot(dat, aes(x=ATTEND, y=RELSCHOL)) +
  geom_point()
relschol.attend.tbl <- table(dat$RELSCHOL, dat$ATTEND, 
                             dnn = c("RELSCHOL", "ATTEND"))
prop.table(relschol.attend.tbl, 1)
# Fit RELSCHOL by RACE
model1 <- glm(RELSCHOL ~ RACE, data = dat, family = binomial)
summary(model1)
exp(coef(model1))
model1_BIC <- BIC(model1)
model1_AIC <- AIC(model1)
logit_m1 <- -1.0852 + -1.0629 * dat$RACE
pi_m1 <- exp(logit_m1) / (1 + exp(logit_m1))
# Fit RELSCHOL by INCOME
model2 <- glm(RELSCHOL ~ INCOME, data = dat, family = binomial)
summary(model2)
exp(coef(model2))
model2_BIC <- BIC(model2)
model2_AIC <- AIC(model2)
# Use logit predicitive equation to compute PI for each record
logit_m2 <- -2.821162 + 0.16157 * dat$INCOME
pi_m2 <- exp(logit_m2) / (1 + exp(logit_m2))
plot(dat$INCOME, pi_m2, main = "Pi Model 2 vs INCOME", xlab = "INCOME", xlim = c(0, 30), ylim = c(0, 1))
# Fit RELSCHOL by ATTEND
model3 <- glm(RELSCHOL ~ ATTEND, data = dat, family = binomial)
summary(model3)
exp(coef(model3))
model3_BIC <- BIC(model3)
model3_AIC <- AIC(model3)
# Plot logit
logit_m3 <- -3.1079 + 0.2586 * dat$ATTEND
pi_m3 <- exp(logit_m3) / (1 + exp(logit_m3))
plot(dat$ATTEND, pi_m3, main = "Pi Model 3 vs ATTEND", xlab = "ATTEND", xlim = c(1, 20), ylim = c(0, 1))
# Fit RELSCHOL by RACE, INCOME, and ATTEND
model4 <- glm(RELSCHOL ~ RACE + INCOME + ATTEND, data = dat, family = binomial)
summary(model4)
exp(coef(model4))
model4_BIC <- BIC(model4)
model4_AIC <- AIC(model4)
logit_m4 <- -3.57539 + -1.28254 * dat$RACE + 0.19993 * dat$INCOME + 0.33080 * dat$ATTEND
pi_m4 <- exp(logit_m4) / (1 + exp(logit_m4))
# Odds White Student
logit_m4_white <- -3.57539 - 1.28254 * 1 + 0.19993 * 4 + 0.33080 * 5
odds_white_m4 <- round(exp(logit_m4_white), digits = 3)
# Odds Non-White
logit_m4_nonwhite <- -3.57539 - 1.28254 * 0 + 0.19993 * 4 + 0.33080 * 5
odds_nonwhite_m4 <- round(exp(logit_m4_nonwhite), digits = 3)
adjusted_odds_ratio <- round(odds_white_m4 / odds_nonwhite_m4, digits = 3)
# Predictions
pi_m1_threshold <- ifelse(pi_m1 >= 0.5, 1, 0)
pi_m2_threshold <- ifelse(pi_m2 >= 0.5, 1, 0)
pi_m3_threshold <- ifelse(pi_m3 >= 0.5, 1, 0)
pi_m4_threshold <- ifelse(pi_m4 >= 0.5, 1, 0)

# Model 1
tbl <- table(dat$RELSCHOL, pi_m1_threshold, dnn = c("RELSCHOL", "PREDICT"))
pred = predict(model4)
accuracy <- table(pred, dat$RELSCHOL)
sum(diag(accuracy))/sum(accuracy)
sum(diag(tbl))/sum(tbl)

(507 + 1) / (507+4+1+75)

